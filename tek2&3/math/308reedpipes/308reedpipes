#!/usr/bin/env python3
##
## EPITECH PROJECT, 2022
## 308
## File description:
## 308
##

import sys
from math import *

def computeVec():
    i = 6 * (arg['10'] - 2 * arg['5'] + arg['0']) / 50
    y = 6 * (arg['15'] - 2 * arg['10'] + arg['5']) / 50
    z = 6 * (arg['20'] - 2 * arg['15'] + arg['10']) / 50
    vec[2] = (y - (i + z) / 4) * 4 / 7
    vec[1] = i / 2 - 0.25 * vec[2]
    vec[3] = z / 2 - 0.25 * vec[2]

def calculateResult():
    for d in range(int(arg['n'])):
        x = 20 / (arg['n'] - 1) * d
        i = int((x - 0.01) / 5) + 1
        part0 = vec[i - 1] / 30 * pow(x - radius[i], 3)
        part1 = vec[i] / 30 * pow(x - radius[i - 1], 3)
        part2 = (ord[i - 1] / 5 - 5 / 6 * vec[i - 1])
        part3 = (x - radius[i])
        part4 = (ord[i] / 5 - 5 / 6 * vec[i])
        part5 = (x - radius[i - 1])
        part6 = part2 * part3
        part7 = part4 * part5
        total = (- part0 + part1 - part6 + part7)
        print("abscissa: {:.1f} cm".format(20 / (arg['n'] - 1) * d), end = '\t')
        print("radius: {:.1f} cm".format(total))

if __name__ == "__main__":
    arg = len(sys.argv) - 1
    if (arg == 1 and sys.argv[1] == "-h"):
        print ("USAGE\n    ./308reedpipes r0 r5 r10 r15 r20 n\nDESCRIPTION\n    r0    radius (in cm) of pipe at the 0cm abscissa\n    r5    radius (in cm) of pipe at the 5cm abscissa\n    r10    radius (in cm) of pipe at the 10cm abscissa\n    r15    radius (in cm) of pipe at the 15cm abscissa\n    r20    radius (in cm) of pipe at the 20cm abscissa\n    n     number of points needed to display the radius")
        exit (0)
    if (arg != 6):
        print ("USAGE\n    ./308reedpipes r0 r5 r10 r15 r20 n\nDESCRIPTION\n    r0    radius (in cm) of pipe at the 0cm abscissa\n    r5    radius (in cm) of pipe at the 5cm abscissa\n    r10    radius (in cm) of pipe at the 10cm abscissa\n    r15    radius (in cm) of pipe at the 15cm abscissa\n    r20    radius (in cm) of pipe at the 20cm abscissa\n    n     number of points needed to display the radius")
        exit (84)
    for i in range (1, len(sys.argv)):
        for y in range (0,  len(sys.argv[i])):
            if ((sys.argv[i][y] < '0' or sys.argv[i][y] > '9') and sys.argv[i][y] != '.'):
                exit (84)

    ord = []
    radius = [0, 5, 10, 15, 20]
    arg = {'0': 0, '5': 0, '10': 0, '15': 0, '20': 0, 'n': 0}
    for y, i in zip(arg, range(1, len(sys.argv))):
        arg[y] = float(sys.argv[i])
        if arg[y] is not arg['n']:
            ord.append(arg[y])
    vec = [0, 0, 0, 0, 0]
    computeVec()
    print("vector result: [0.0, {:.1f}, ".format(vec[1] if round(vec[1], 1) != 0 else 0), end = '')
    print("{:.1f},".format(vec[2] if round(vec[2], 1) != 0 else 0), end = ' ')
    print("{:.1f}, 0.0]".format(vec[3] if round(vec[3], 1) != 0 else 0))
    calculateResult()
    exit (0)